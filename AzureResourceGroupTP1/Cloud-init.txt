#cloud-config
# Configuration générale
# Indique que le système doit effectuer des mises à jour des paquets lors du déploiement.
package_upgrade: true

# Packages à installer
# Liste les paquets à installer sur la machine, ici `nginx` pour le serveur web
# et `nodejs`/`npm` pour exécuter des applications JavaScript côté serveur.
packages:
  - nginx
  - nodejs
  - npm

# Écriture de fichiers
# Crée ou met à jour des fichiers spécifiques sur la machine.
write_files:

  # Configuration du serveur Nginx
  # Définit un fichier de configuration Nginx pour rediriger les requêtes HTTP
  # vers une application Node.js fonctionnant sur le port 3000.
  - owner: www-data:www-data
    path: /etc/nginx/sites-available/default
    defer: true
    content: |
      server {
        listen 80;
        location / {
          proxy_pass http://localhost:3000;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host $host;
          proxy_cache_bypass $http_upgrade;
        }
      }
  - owner: www-data:www-data
    path: /home/myapp/index.js
    defer: true
    content: |
      var express = require('express')
      var app = express()
      var os = require('os');
      app.get('/', function (req, res) {
        res.send(`
          <!DOCTYPE html>
          <html>
          <head>
            <title>Bonjour Environement</title>
          </head>
          <body>
            <h1>Bonjour VM ${os.hostname()}!</h1>
            <p>Ceci est une simple page HTML servie par Node.js.</p>
          </body>
          </html>
        `)
      })
      app.listen(3000, function () {
        console.log('Hello world app listening on port 3000!')
      })
runcmd:
  - service nginx restart
  - cd "/home/myapp"
  - npm init
  - npm install express -y
  - nodejs index.js