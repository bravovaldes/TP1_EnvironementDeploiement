# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Déclencheur
# Spécifie que le pipeline s'exécute automatiquement lorsqu'il y a un changement sur la branche "master".
trigger:
- master

# Pool d'agents
# Définit le pool d'agents à utiliser pour exécuter le pipeline.
pool:  "default"

# Variables
# Déclare une variable qui sera utilisée pour contenir le contenu encodé en base64 du fichier cloud-init.
variables:
- name: CloudInitContent

  

# Étapes du pipeline
steps:

# Étape 1 : Encodage du fichier Cloud-init
# Lit le contenu du fichier `Cloud-init.txt`, l'encode en base64, et stocke le résultat dans une variable de pipeline.
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
        $cloudContent = Get-Content -Path  .\AzureResourceGroupTP1\Cloud-init.txt -Raw
        Write-Host $CloudContent
        $encodedContent = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($CloudContent))
        Write-Host $encodedContent
        Write-Host "##vso[task.setvariable variable=CloudInitContent;]$encodedContent"


# Étape 2 : Déploiement d'un Key Vault
# Utilise un fichier de template ARM pour créer ou mettre à jour un groupe de ressources avec un Azure Key Vault.
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(1)(2ca40756-e319-40dd-84a5-ca8148b8ed59)'
    subscriptionId: '2ca40756-e319-40dd-84a5-ca8148b8ed59'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'tpKey'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\AzureKeyVaultManager\AzureKeyVaultManager\azuredeploy.json'
    csmParametersFile: '$(Build.SourcesDirectory)\AzureKeyVaultManager\AzureKeyVaultManager\azuredeploy.parameters.json'
    overrideParameters: '-name TPDeploiement -secretName adminPass -secretValue $(adminPass)'
    deploymentMode: 'Incremental'
    deploymentOutputs: 'KeyVaultDeployment'

# Étape 3 : Lecture des secrets du Key Vault
# Récupère un secret spécifique (AdminPass) depuis le Key Vault déployé dans l'étape précédente.
- task: AzureKeyVault@2
  name: AzureKey
  inputs:
    azureSubscription: 'Azure subscription 1(1)(2ca40756-e319-40dd-84a5-ca8148b8ed59)'
    KeyVaultName: 'TPDeploiement'
    SecretsFilter: 'AdminPass'
    RunAsPreJob: false

# Étape 4 : Vérification du contenu encodé
# Affiche la valeur encodée en base64 du contenu cloud-init pour vérification.
- script: |
    echo $(CloudInitContent)


# Étape 5 : Validation du déploiement ARM avec Cloud-init
# Valide le fichier ARM avec les paramètres fournis, notamment les données customData et le mot de passe admin récupéré.
- task: AzureResourceManagerTemplateDeployment@3   
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(1)(2ca40756-e319-40dd-84a5-ca8148b8ed59)'
    subscriptionId: '2ca40756-e319-40dd-84a5-ca8148b8ed59'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'TP1_Deploiement'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\AzureResourceGroupTP1\azuredeploy.json'
    csmParametersFile: '$(Build.SourcesDirectory)\AzureResourceGroupTP1\azuredeploy.parameters.json'
    overrideParameters: '-customData $(CloudInitContent) -adminPassword $(AzureKey.AdminPass)'
    deploymentMode: 'Validation'
 
# Étape 6 : Déploiement final avec Cloud-init et paramètres
# Déploie le fichier ARM avec les paramètres finalisés (Cloud-init encodé et mot de passe admin).
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(1)(2ca40756-e319-40dd-84a5-ca8148b8ed59)'
    subscriptionId: '2ca40756-e319-40dd-84a5-ca8148b8ed59'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'TP1_Deploiement'
    location: 'Canada Central'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\AzureResourceGroupTP1\azuredeploy.json'
    csmParametersFile: '$(Build.SourcesDirectory)\AzureResourceGroupTP1\azuredeploy.parameters.json'
    overrideParameters: '-customData $(CloudInitContent) -adminPassword $(AzureKey.AdminPass)'
    deploymentMode: 'Incremental'

